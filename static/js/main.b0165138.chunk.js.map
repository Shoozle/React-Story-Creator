{"version":3,"sources":["components/Storybook/storybook.module.css","components/Canvas/canvas.module.css","components/Canvas/Toolbox/toolbox.module.css","components/Flowchart/flowchart.module.css","components/UI/Modal/modal.module.css","components/UI/Button/button.module.css","components/UI/Cursor/cursor.module.css","components/UI/Backdrop/backdrop.module.css","components/UI/Navbar/navbar.module.css","components/Canvas/Title/title.module.css","components/UI/Button/Button.js","components/Canvas/Toolbox/Toolbox.js","components/UI/Cursor/Cursor.js","components/Canvas/Canvas.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Storybook/Storybook.js","components/Flowchart/Flowchart.js","components/UI/Navbar/Navbar.js","store/story.js","components/Canvas/Title/Title.js","App.js","index.js"],"names":["module","exports","Button","props","className","classes","onClick","text","Toolbox","brushControls","onUndo","onRedo","onFill","onPrevPage","onNewPage","onNextPage","brushSize","onBrushSizeChange","color","setColor","onPreview","htmlFor","type","id","value","min","max","onChange","e","colorful","placement","side","bottom","Cursor","style","cursorStyle","Canvas","canvasRef","useRef","textRef","useState","painting","setPainting","storyContext","useContext","StoryContext","pages","storyState","pageNum","setBrushSize","setCursorStyle","updateCursor","top","pageY","left","pageX","height","width","border","useEffect","canvas","current","storyText","ctx","getContext","edits","length","fillStyle","fillRect","dispatchStory","payload","edit","toDataURL","image","Image","src","editIndex","onload","drawImage","undefined","endPosition","beginPath","display","sideToolbox","target","colorPicker","topToolbox","onPageChange","prevPageNum","drawingArea","drawingButtons","storyArea","ref","onMouseEnter","onMouseDown","onMouseMove","location","x","y","offsetLeft","window","scrollX","offsetTop","scrollY","lineWidth","lineCap","strokeStyle","lineTo","stroke","moveTo","draw","clientX","clientY","onMouseUp","onMouseLeave","pageNumber","pageButtons","col","row","maxLength","placeholder","Backdrop","backdrop","children","Modal","show","modalOpen","modalClosed","join","Storybook","firstPageDisplay","secondPageDisplay","firstCanvasRef","secondCanvasRef","index","setIndex","firstPage","setFirstPage","secondPage","setSecondPage","hideSecondPage","setHideSecondPage","pagesToShow","innerWidth","firstPageCtx","firstimageSrc","imageSrc","firstImage","secondPageCtx","secondimageSrc","secondImage","err","page","bookSection","storyTitle","title","pageArea","buttonArea","onClose","Flowchart","storyDisplay","setStoryDisplay","pageDivs","map","process","box","closeStoryHandler","Flowchartarea","Navbar","storyReducer","state","action","oldPages","splice","push","newTitle","alert","Title","setTitle","createContext","App","setPageNum","changePageHandler","useReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0165138.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookSection\":\"storybook_bookSection__2F6B_\",\"storyTitle\":\"storybook_storyTitle__2KVxB\",\"pageArea\":\"storybook_pageArea__-CvQd\",\"page\":\"storybook_page__1BQiV\",\"canvas\":\"storybook_canvas__DLQa6\",\"buttonArea\":\"storybook_buttonArea__1UoCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__1NvqR\",\"drawingArea\":\"canvas_drawingArea__2ePnn\",\"pageNumber\":\"canvas_pageNumber__2-V9Y\",\"title\":\"canvas_title__C4dr1\",\"storyArea\":\"canvas_storyArea__37dT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbox\":\"toolbox_Toolbox__2YJJF\",\"colorful\":\"toolbox_colorful__3cxTy\",\"bottom\":\"toolbox_bottom__3ccIv\",\"side\":\"toolbox_side__1TK3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Flowchartarea\":\"flowchart_Flowchartarea__Ln6sf\",\"Flowchart\":\"flowchart_Flowchart__3xsyz\",\"box\":\"flowchart_box__2tbyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"modal_Modal__12FWS\",\"ModalOpen\":\"modal_ModalOpen__skEoq\",\"ModalClosed\":\"modal_ModalClosed__2asIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__1O76R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cursor\":\"cursor_Cursor__32MIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"backdrop_backdrop__8GLTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"navbar_Navbar__2L923\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"title_Title__3JYWz\"};","import classes from './button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={classes.Button} onClick={props.onClick}>{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import classes from './toolbox.module.css';\r\nimport './brush.css';\r\nimport Button from '../../UI/Button/Button';\r\nimport { HexColorPicker } from 'react-colorful';\r\n\r\nconst Toolbox = (props) => {\r\n\r\n    const { onUndo, onRedo, onFill, onPrevPage, onNewPage, onNextPage, brushSize, onBrushSizeChange, color, setColor, onPreview } = props;\r\n\r\n    let brushControls;\r\n\r\n    if (onBrushSizeChange) {\r\n        brushControls = (\r\n            <>\r\n                <fieldset>\r\n                <label htmlFor=\"size\">Brush Size</label>\r\n                <input type=\"range\" id=\"size\" value={brushSize} min=\"1\" max=\"60\" onChange={(e) => onBrushSizeChange(e)}></input>\r\n                </fieldset>\r\n\r\n                <HexColorPicker className={classes.colorful} color={color} onChange={setColor} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.Toolbox} ${props.placement === 'side' ? classes.side : classes.bottom}`}>\r\n                {onUndo && <Button onClick={onUndo} text=\"Undo\" />}\r\n                {onFill && <Button onClick={onFill} text=\"Fill\" />}\r\n                {onRedo && <Button onClick={onRedo} text=\"Redo\" />}\r\n                {brushControls}\r\n\r\n            {onPrevPage && <Button onClick={onPrevPage} text=\"Previous Page\" />}\r\n            {onNewPage && <Button onClick={onNewPage} text=\"Add a Page\" />}\r\n            {onNextPage && <Button onClick={onNextPage} text=\"Next Page\" />}\r\n            {onPreview && <Button onClick={onPreview} text=\"Preview Story\" />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbox;","\r\nimport classes from './cursor.module.css';\r\n\r\nconst Cursor = (props) => {\r\n\r\n    return (\r\n        <div style={props.cursorStyle} className={classes.Cursor}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cursor","import { useContext, useEffect, useRef, useState } from 'react';\r\nimport { StoryContext } from '../../App';\r\nimport classes from './canvas.module.css'\r\nimport Toolbox from './Toolbox/Toolbox';\r\nimport Cursor from '../UI/Cursor/Cursor';\r\n\r\nconst Canvas = (props) => {\r\n\r\n    const canvasRef = useRef(null);\r\n    const textRef = useRef(null);\r\n    const [painting, setPainting] = useState(false);\r\n    const storyContext = useContext(StoryContext);\r\n    const { pages } = storyContext.storyState;\r\n    const { pageNum } = props;\r\n    const maxPages = 20;\r\n    const [brushSize, setBrushSize] = useState(20);\r\n    const [color, setColor] = useState('#000');\r\n    const [cursorStyle, setCursorStyle] = useState({});\r\n\r\n    const updateCursor = (e) => {\r\n        setCursorStyle({\r\n            top: e.pageY - (brushSize / 2),\r\n            left: e.pageX - (brushSize / 2),\r\n            height: `${brushSize}px`,\r\n            width: `${brushSize}px`,\r\n            border: `1px solid ${color}`\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const storyText = textRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        if (pages[pageNum].edits.length === 0) {\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillRect(0, 0, 400, 400);\r\n            storyContext.dispatchStory({ type: 'ADD_PAINTING', payload: { pageNum, edit: canvas.toDataURL() } })\r\n        }\r\n\r\n        const image = new Image();\r\n        image.src = pages[pageNum].edits[pages[pageNum].editIndex - 1];\r\n        image.onload = () => ctx.drawImage(image, 0, 0);\r\n\r\n        if (pages[pageNum].text === undefined || null) {\r\n            storyText.value = '';\r\n        }\r\n        storyText.value = pages[pageNum].text;\r\n\r\n    }, [pages, pageNum, storyContext])\r\n\r\n    const startPosition = () => {\r\n        setPainting(true)\r\n    }\r\n\r\n    const endPosition = () => {\r\n\r\n        if (painting) {\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.beginPath();\r\n            storyContext.dispatchStory({ type: 'ADD_PAINTING', payload: { pageNum, edit: canvas.toDataURL() } })\r\n        }\r\n        setPainting(false);\r\n        setCursorStyle({\r\n            display: 'none'\r\n        })\r\n    }\r\n\r\n    const draw = (canvas, location) => {\r\n        const ctx = canvas.getContext('2d');\r\n        const { x, y } = location;\r\n\r\n        if (!painting) return;\r\n\r\n        let offsetLeft = canvas.offsetLeft - window.scrollX;\r\n        let offsetTop = canvas.offsetTop - window.scrollY;\r\n        ctx.lineWidth = brushSize;\r\n        ctx.lineCap = \"round\";\r\n        ctx.strokeStyle = color;\r\n        ctx.lineTo(x - offsetLeft, y - offsetTop);\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n        ctx.moveTo(x - offsetLeft, y - offsetTop);\r\n    }\r\n\r\n    const undo = () => {\r\n        if (pages[pageNum].editIndex > 1) {\r\n            storyContext.dispatchStory({ type: 'UNDO_PAINTING', payload: { pageNum } });\r\n        }\r\n    }\r\n\r\n    const redo = () => {\r\n        if (pages[pageNum].editIndex < storyContext.storyState.pages[pageNum].edits.length) {\r\n            storyContext.dispatchStory({ type: 'REDO_PAINTING', payload: { pageNum } });\r\n        }\r\n    }\r\n\r\n    const fill = () => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(0, 0, 400, 400);\r\n        storyContext.dispatchStory({ type: 'ADD_PAINTING', payload: { pageNum, edit: canvas.toDataURL() } })\r\n    }\r\n\r\n    const newPage = () => {\r\n        if (pages.length < maxPages) {\r\n            storyContext.dispatchStory({ type: 'ADD_PAGE', payload: { pageNum } })\r\n            props.onPageChange(pages.length)\r\n        }\r\n    }\r\n\r\n    const nextPage = () => {\r\n        if (pageNum < pages.length - 1) {\r\n            props.onPageChange((prevPageNum) => prevPageNum + 1)\r\n        }\r\n    }\r\n\r\n    const prevPage = () => {\r\n            if (pageNum > 0) {\r\n                props.onPageChange((prevPageNum) => prevPageNum - 1)\r\n            }\r\n            \r\n    }\r\n\r\n    const changeBrushSize = (e) => {\r\n        setBrushSize(e.target.value);\r\n    }\r\n\r\n    const onUpdateStoryText = (e) => {\r\n        const text = e.target.value;\r\n        storyContext.dispatchStory({ type: 'UPDATE_TEXT', payload: { pageNum, text } })\r\n    }\r\n\r\n    const sideToolbox = (\r\n        <Toolbox\r\n            onUndo={undo}\r\n            onRedo={redo}\r\n            onFill={fill}\r\n            onBrushSizeChange={changeBrushSize}\r\n            brushSize={brushSize}\r\n            colorPicker={brushSize}\r\n            placement=\"side\"\r\n            color={color}\r\n            setColor={setColor}\r\n        />\r\n    )\r\n\r\n    const topToolbox = (\r\n        <Toolbox\r\n            onPrevPage={prevPage}\r\n            onNewPage={newPage}\r\n            onNextPage={nextPage}\r\n            placement=\"bottom\"\r\n        />\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Cursor\r\n                cursorStyle={cursorStyle}\r\n            />\r\n            <div className={classes.drawingArea}>\r\n                <div className={classes.drawingButtons}>\r\n                    {sideToolbox}\r\n                </div>\r\n                <div className={classes.storyArea}>\r\n                    <canvas className={classes.canvas}\r\n                        width=\"400px\" height=\"400px\"\r\n                        ref={canvasRef}\r\n                        id=\"drawing-canvas\"\r\n                        onMouseEnter={e => updateCursor(e)}\r\n                        onMouseDown={startPosition}\r\n                        onMouseMove={e => {\r\n                            const canvas = canvasRef.current;\r\n                            updateCursor(e)\r\n                            draw(canvas, { x: e.clientX, y: e.clientY })\r\n                        }}\r\n                        onMouseUp={endPosition}\r\n                        onMouseLeave={endPosition}\r\n                    />\r\n                    <p className={classes.pageNumber}>Page {pageNum + 1} of {storyContext.storyState.pages.length}</p>\r\n                    <div className={classes.pageButtons}>\r\n                        {topToolbox}\r\n                    </div>\r\n                    <textarea\r\n                        ref={textRef}\r\n                        type=\"textarea\"\r\n                        col=\"30\"\r\n                        row=\"12\"\r\n                        maxLength=\"200\"\r\n                        placeholder=\"Page writing\"\r\n                        onChange={onUpdateStoryText}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Canvas;","import classes from './backdrop.module.css';\r\n\r\nconst Backdrop = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.backdrop}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Backdrop;","\r\nimport classes from './modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n\r\n    let className;\r\n\r\n    if (props.show) {\r\n        className = classes.modalOpen\r\n    } else {\r\n        className = classes.modalClosed\r\n    }\r\n\r\n    return (\r\n        <div className={[classes.Modal, className].join(' ')}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { StoryContext } from '../../App';\r\nimport Backdrop from \"../UI/Backdrop/Backdrop\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport Button from '../UI/Button/Button';\r\n\r\nimport classes from './storybook.module.css';\r\n\r\nconst Storybook = (props) => {\r\n\r\n    const storyContext = useContext(StoryContext);\r\n    const { storyState } = storyContext;\r\n    const firstCanvasRef = useRef(null);\r\n    const secondCanvasRef = useRef(null);\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [firstPage, setFirstPage] = useState({});\r\n    const [secondPage, setSecondPage] = useState({});\r\n    const [hideSecondPage, setHideSecondPage] = useState(false);\r\n\r\n    const pagesToShow = () => {\r\n        return window.innerWidth > 900 ? 2 : 1\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const firstPageCanvas = firstCanvasRef.current;\r\n        const firstPageCtx = firstPageCanvas.getContext('2d');\r\n        const firstimageSrc = storyState.pages[index].edits[storyState.pages[index].edits.length - 1];\r\n\r\n        setFirstPage({\r\n            imageSrc: firstimageSrc,\r\n            text: storyState.pages[index].text\r\n        })\r\n\r\n        const firstImage = new Image();\r\n        firstImage.src = firstimageSrc\r\n        firstImage.onload = () => firstPageCtx.drawImage(firstImage, 0, 0);\r\n\r\n        if (pagesToShow() === 2) {\r\n            try {\r\n                const secondPageCanvas = secondCanvasRef.current;\r\n                const secondPageCtx = secondPageCanvas.getContext('2d');\r\n                const secondimageSrc = storyState.pages[index + 1].edits[storyState.pages[index + 1].edits.length - 1];\r\n\r\n                setSecondPage({\r\n                    imageSrc: secondimageSrc,\r\n                    text: storyState.pages[index + 1].text\r\n                })\r\n\r\n                const secondImage = new Image();\r\n                secondImage.src = secondimageSrc\r\n                secondImage.onload = () => secondPageCtx.drawImage(secondImage, 0, 0);\r\n                setHideSecondPage(false);\r\n            } catch (err) {\r\n                setHideSecondPage(true);\r\n            }\r\n        }\r\n    }, [index, storyState.pages, hideSecondPage])\r\n\r\n\r\n    let firstPageDisplay;\r\n    let secondPageDisplay;\r\n\r\n    firstPageDisplay = (\r\n        <div className={classes.page}>\r\n            <canvas width=\"400px\" height=\"400px\" ref={firstCanvasRef} className={classes.canvas} />\r\n            <p>{firstPage.text || 'Please enter some text for this page'}</p>\r\n\r\n        </div>\r\n    )\r\n\r\n    if (window.innerWidth > 900) {\r\n        secondPageDisplay = (\r\n            <div className={classes.page}>\r\n                <canvas width=\"400px\" height=\"400px\" ref={secondCanvasRef} className={classes.canvas} />\r\n                <p>{secondPage.text || 'Please enter some text for this page'}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const prevPage = () => {\r\n        if ((index >= 2) || (index>=1 && pagesToShow() === 1)) {\r\n            setIndex(index - pagesToShow())\r\n            setHideSecondPage(false)\r\n        }\r\n    }\r\n\r\n    const nextPage = () => {\r\n        if (index < storyState.pages.length - pagesToShow()) {\r\n            setIndex(index + pagesToShow())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Backdrop>\r\n            <Modal show={true}>\r\n                <div className={classes.bookSection}>\r\n                    <h1 className={classes.storyTitle}>{storyState.title || 'Please enter a title for your story'}</h1>\r\n                    <div className={classes.pageArea}>\r\n                        {firstPageDisplay}\r\n                        {!hideSecondPage && secondPageDisplay}\r\n                    </div>\r\n                    <div className={classes.buttonArea}>\r\n                        {<Button text=\"Previous Page\" onClick={prevPage}></Button>}\r\n                        <Button text=\"Close\" onClick={props.onClose} />\r\n                        {<Button text=\"Next Page\" onClick={nextPage}></Button>}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </Backdrop>\r\n    )\r\n}\r\n\r\nexport default Storybook;","import classes from './flowchart.module.css'\r\nimport { useContext, useState } from 'react';\r\nimport { StoryContext } from '../../App';\r\nimport Toolbox from '../Canvas/Toolbox/Toolbox';\r\nimport Storybook from '../Storybook/Storybook';\r\n\r\nconst Flowchart = (props) => {\r\n\r\n    const storyContext = useContext(StoryContext);\r\n    const { pages } = storyContext.storyState;\r\n    const [storyDisplay, setStoryDisplay] = useState(null);\r\n\r\n    const pageDivs = pages.map((process, index) => {\r\n        const text = `Page ${index + 1}`\r\n        return (\r\n            <div\r\n                key={index}\r\n                className={classes.box}\r\n                onClick={() => props.onPageChange(index)}\r\n            >\r\n                <span>{text}</span>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const closeStoryHandler = () => {\r\n        setStoryDisplay(null);\r\n    }\r\n\r\n    const previewStory = () => {\r\n        setStoryDisplay(<Storybook onClose={closeStoryHandler}/>)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Flowchartarea}>\r\n            <div className={classes.Flowchart}>\r\n                {pageDivs}\r\n            </div>\r\n            {storyDisplay}\r\n            <Toolbox \r\n                onPreview={previewStory}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flowchart","import classes from './navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n    <nav className={classes.Navbar}>\r\n        <ul>\r\n            <li>Home</li>\r\n            <li>Browse</li>\r\n            <li>Sign in</li>\r\n        </ul>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","const storyReducer = (state, action) => {\r\n\r\n    const { pages } = state;\r\n    const { edit, pageNum } = action.payload;\r\n\r\n    switch (action.type) {\r\n        case 'UNDO_PAINTING':\r\n            {\r\n                const oldPages = [...state.pages]\r\n                oldPages[pageNum].editIndex--;\r\n                return { ...state, pages: oldPages }\r\n            }\r\n        case 'REDO_PAINTING':\r\n            {\r\n                const oldPages = [...state.pages]\r\n                oldPages[pageNum].editIndex++;\r\n                return { ...state, pages: oldPages }\r\n            }\r\n        case 'ADD_PAINTING':\r\n            {\r\n                const oldPages = [...state.pages]\r\n                oldPages[pageNum].edits.splice(oldPages[pageNum].editIndex)\r\n                pages[pageNum].edits.push(edit);\r\n                pages[pageNum].editIndex++;\r\n                return { ...state, pages: oldPages }\r\n            }\r\n        case 'ADD_PAGE':\r\n            {\r\n                const oldPages = [...state.pages]\r\n                oldPages.push({ text: '', editIndex: 0, edits: [] })\r\n                return { ...state, pages: oldPages };\r\n            }\r\n        case 'UPDATE_TEXT':\r\n            {\r\n                const oldPages = [...state.pages]\r\n                oldPages[pageNum].text = action.payload.text\r\n                return { ...state, pages: oldPages }\r\n            }\r\n        case 'UPDATE_TITLE':\r\n            {\r\n                const newTitle = action.payload.title;\r\n                return { ...state, title: newTitle}\r\n            }\r\n        default:\r\n            alert('No action for this type')\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default storyReducer;","\r\nimport { useContext, useState } from \"react\";\r\nimport { StoryContext } from \"../../../App\";\r\nimport classes from './title.module.css'\r\n\r\nconst Title = () => {\r\n\r\n    const maxLength = 80;\r\n    const [title, setTitle] = useState('');\r\n    const storyContext = useContext(StoryContext);\r\n\r\n    const onChangeHandler = (e) => {\r\n        setTitle(e.target.value)\r\n        storyContext.dispatchStory({type: 'UPDATE_TITLE', payload: {title}})\r\n    }\r\n\r\n    return (\r\n        <input \r\n            placeholder=\"Story title\"\r\n            value={title} \r\n            onChange={onChangeHandler} \r\n            maxLength={maxLength} \r\n            className={classes.Title}\r\n\r\n            />\r\n    )\r\n\r\n}\r\n\r\nexport default Title","import { createContext, useReducer, useState } from 'react';\nimport Canvas from './components/Canvas/Canvas';\nimport Flowchart from './components/Flowchart/Flowchart';\nimport Navbar from './components/UI/Navbar/Navbar';\n\nimport storyReducer from './store/story';\n\nimport './App.css';\nimport Title from './components/Canvas/Title/Title';\n\nexport const StoryContext = createContext();\n\nfunction App() {\n\n\n\n  const initialStoryState = {\n    title: '',\n    pages: [\n      {\n        text: '',\n        editIndex: 0,\n        edits: []\n      }\n    ]\n  };\n\n  const [pageNum, setPageNum] = useState(0);\n\n  const changePageHandler = (pageNum) => {\n    setPageNum(pageNum)\n  }\n\n  const [storyState, dispatchStory] = useReducer(storyReducer, initialStoryState)\n\n\n  return (\n    <>\n      <Navbar />\n      <StoryContext.Provider\n        value={{\n          storyState,\n          dispatchStory\n        }}>\n        <Title/>\n        <div className=\"App\">\n          <Canvas pageNum={pageNum} onPageChange={changePageHandler} />\n          <Flowchart pageNum={pageNum} onPageChange={changePageHandler} />\n        </div>\n      </StoryContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}